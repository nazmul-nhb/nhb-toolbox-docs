import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';

// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)

/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */
const sidebars: SidebarsConfig = {
	// By default, Docusaurus generates a sidebar from the docs folder structure
	// utilitiesSidebar: [{ type: 'autogenerated', dirName: '.' }],
	overviewSidebar: [
		{
			type: 'category',
			label: 'Overview',
			link: {
				id: 'intro',
				type: 'doc',
			},
			items: [
				'number/intro-number',
				'string/intro-string',
				'object/intro-object',
				'array/intro-array',
				'color/intro-color',
				'date/intro-date',
				'form/intro-form',
				'classes/intro-classes',
				'predicates/intro-predicates',
			],
		},
	],

	utilitiesSidebar: [
		{
			type: 'doc',
			id: 'intro-utils',
		},
		{
			type: 'category',
			label: 'Number Utilities',
			link: {
				type: 'doc',
				id: 'number/intro-number',
			},
			items: [
				'number/calculatePercentage',
				'number/numberToWords',
				'number/convertToDecimal',
				'number/formatCurrency',
				'number/getNumbersInRange',
				'number/getRandomNumber',
				'number/getRandomFloat',
				'number/fibonacci',
				'number/roundToNearest',
				'number/findPrimeNumbers',
				'number/getAverage',
				'number/sumNumbers',
				'number/sumDigits',
				'number/calculateHCF',
				'number/calculateLCM',
				'number/reverseNumber',
				'number/convertToRoman',
				'number/getOrdinal',
				'number/clampNumber',
			],
		},
		{
			type: 'category',
			label: 'String Utilities',
			link: {
				type: 'doc',
				id: 'string/intro-string',
			},
			items: [
				'string/generateRandomID',
				'string/generateAnagrams',
				'string/capitalizeString',
				'string/convertStringCase',
				'string/truncateString',
				'string/trimString',
				'string/replaceAllInString',
				'string/formatUnitWithPlural',
				'string/extractNumbers',
				'string/extractEmails',
				'string/extractURLs',
				'string/maskString',
				'string/normalizeString',
				'string/reverseString',
				'string/slugifyString',
				'string/countWords',
				'string/getLevenshteinDistance',
			],
		},
		{
			type: 'category',
			label: 'Object Utilities',
			link: {
				type: 'doc',
				id: 'object/intro-object',
			},
			items: [
				'object/sanitizeData',
				'object/convertObjectValues',
				'object/mergeObjects',
				'object/mergeAndFlattenObjects',
				'object/parseJsonToObject',
				'object/parseObjectValues',
				'object/pickFields',
				'object/pickFieldsByCondition',
				'object/remapFields',
				'object/cloneObject',
				'object/countObjectFields',
				'object/extractNewFields',
				'object/extractUpdatedFields',
				'object/extractUpdatedAndNewFields',
				'object/flattenObjectDotNotation',
				'object/flattenObjectKeyValue',
			],
		},
		{
			type: 'category',
			label: 'Array Utilities',
			link: {
				type: 'doc',
				id: 'array/intro-array',
			},
			items: [
				'array/sortAnArray',
				'array/createOptionsArray',
				'array/getDuplicates',
				'array/removeDuplicates',
				'array/findMissingElements',
				'array/flattenArray',
				'array/filterArrayOfObjects',
				'array/getLastArrayElement',
				'array/splitArray',
				'array/shuffleArray',
				'array/naturalSort',
				'array/moveArrayElement',
				'array/rotateArray',
			],
		},
		{
			type: 'category',
			label: 'Color Utilities',
			link: {
				type: 'doc',
				id: 'color/intro-color',
			},
			items: [
				'color/getColorForInitial',
				'color/convertColorCode',
				'color/random-color',
				'color/color-converters',
			],
		},
		{
			type: 'category',
			label: 'Date & Time Utilities',
			link: {
				type: 'doc',
				id: 'date/intro-date',
			},
			items: [
				'date/getGreeting',
				'date/formatUTCOffset',
				'date/extractHourMinute',
				'date/getTotalMinutes',
				'date/extractMinutesFromUTC',
				'date/extractTimeFromUTC',
				'date/getCurrentDateTime',
			],
		},
		{
			type: 'category',
			label: 'Form Utilities',
			link: {
				type: 'doc',
				id: 'form/intro-form',
			},
			items: ['form/createFormData', 'form/parseFormData', 'form/serializeForm'],
		},
	],

	classesSidebar: [
		{
			type: 'doc',
			id: 'classes/intro-classes',
		},
		{
			type: 'category',
			label: 'Chronos',
			link: {
				type: 'doc',
				id: 'classes/Chronos',
			},
			items: [
				'classes/Chronos',
				// 'classes/finder',
				// add more class docs here
			],
		},
	],

	predicatesSidebar: [
		{
			type: 'doc',
			id: 'intro-pre-guards',
		},
		{
			type: 'category',
			label: 'Predicate Functions',
			link: {
				type: 'doc',
				id: 'predicates/intro-predicates',
			},
			items: [
				'predicates/number-checkers',
				'predicates/string-checkers',
				'predicates/array-checkers',
				'predicates/time-checkers',
			],
		},
		{
			type: 'category',
			label: 'Type Guards',
			link: {
				type: 'doc',
				id: 'guards/intro-guards',
			},
			items: [
				'guards/time-guards',
				'guards/form-guards',
				// 'guards/isObject',
				// 'guards/isArray',
				// 'guards/isFunction',
				// 'guards/isDate',
				// 'guards/isNullOrUndefined',
				// 'guards/isValidEmail',
				// 'guards/isValidPhoneNumber',
			],
		},
	],
};

export default sidebars;
