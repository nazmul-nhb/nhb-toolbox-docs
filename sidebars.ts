import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';

// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)

/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */
const sidebars: SidebarsConfig = {
	// By default, Docusaurus generates a sidebar from the docs folder structure
	// utilitiesSidebar: [{ type: 'autogenerated', dirName: '.' }],
	overviewSidebar: [
		{
			label: 'Overview',
			id: 'intro',
			type: 'doc',
		},
		{
			type: 'category',
			label: 'Utilities',
			items: [
				'utilities/number/number',
				'utilities/string/string',
				'utilities/object/object',
				'utilities/array/array',
				'utilities/color/color',
				'utilities/date/date',
				'utilities/form/form',
				'utilities/dom/dom',
				'utilities/misc/misc',
			],
		},
		{
			type: 'category',
			label: 'Classes',
			link: {
				id: 'classes/classes',
				type: 'doc',
			},
			items: [],
		},
		{
			type: 'category',
			label: 'Predicates & Guards',
			link: {
				id: 'predicates-guards',
				type: 'doc',
			},
			items: ['predicates/predicates', 'predicates/guards'],
		},
	],

	utilitiesSidebar: [
		{
			type: 'doc',
			id: 'utilities/utilities',
		},
		{
			type: 'category',
			label: 'Number Utilities',
			link: {
				type: 'doc',
				id: 'utilities/number/number',
			},
			items: [
				'utilities/number/calculatePercentage',
				'utilities/number/numberToWords',
				'utilities/number/convertToDecimal',
				'utilities/number/formatCurrency',
				'utilities/number/getNumbersInRange',
				'utilities/number/getRandomNumber',
				'utilities/number/getRandomFloat',
				'utilities/number/fibonacci',
				'utilities/number/roundToNearest',
				'utilities/number/findPrimeNumbers',
				'utilities/number/getAverage',
				'utilities/number/sumNumbers',
				'utilities/number/sumDigits',
				'utilities/number/calculateHCF',
				'utilities/number/calculateLCM',
				'utilities/number/reverseNumber',
				'utilities/number/convertToRoman',
				'utilities/number/getOrdinal',
				'utilities/number/clampNumber',
			],
		},
		{
			type: 'category',
			label: 'String Utilities',
			link: {
				type: 'doc',
				id: 'utilities/string/string',
			},
			items: [
				'utilities/string/generateRandomID',
				'utilities/string/generateAnagrams',
				'utilities/string/capitalizeString',
				'utilities/string/convertStringCase',
				'utilities/string/truncateString',
				'utilities/string/trimString',
				'utilities/string/replaceAllInString',
				'utilities/string/formatUnitWithPlural',
				'utilities/string/extractNumbers',
				'utilities/string/extractEmails',
				'utilities/string/extractURLs',
				'utilities/string/maskString',
				'utilities/string/normalizeString',
				'utilities/string/reverseString',
				'utilities/string/slugifyString',
				'utilities/string/countWords',
				'utilities/string/getLevenshteinDistance',
			],
		},
		{
			type: 'category',
			label: 'Object Utilities',
			link: {
				type: 'doc',
				id: 'utilities/object/object',
			},
			items: [
				'utilities/object/sanitizeData',
				'utilities/object/convertObjectValues',
				'utilities/object/mergeObjects',
				'utilities/object/mergeAndFlattenObjects',
				'utilities/object/parseJsonToObject',
				'utilities/object/parseObjectValues',
				'utilities/object/pickFields',
				'utilities/object/pickFieldsByCondition',
				'utilities/object/remapFields',
				'utilities/object/cloneObject',
				'utilities/object/countObjectFields',
				'utilities/object/extractNewFields',
				'utilities/object/extractUpdatedFields',
				'utilities/object/extractUpdatedAndNewFields',
				'utilities/object/flattenObjectDotNotation',
				'utilities/object/flattenObjectKeyValue',
			],
		},
		{
			type: 'category',
			label: 'Array Utilities',
			link: {
				type: 'doc',
				id: 'utilities/array/array',
			},
			items: [
				'utilities/array/sortAnArray',
				'utilities/array/createOptionsArray',
				'utilities/array/getDuplicates',
				'utilities/array/removeDuplicates',
				'utilities/array/findMissingElements',
				'utilities/array/flattenArray',
				'utilities/array/filterArrayOfObjects',
				'utilities/array/getLastArrayElement',
				'utilities/array/splitArray',
				'utilities/array/shuffleArray',
				'utilities/array/naturalSort',
				'utilities/array/moveArrayElement',
				'utilities/array/rotateArray',
			],
		},
		{
			type: 'category',
			label: 'Color Utilities',
			link: {
				type: 'doc',
				id: 'utilities/color/color',
			},
			items: [
				'utilities/color/getColorForInitial',
				'utilities/color/convertColorCode',
				'utilities/color/random-color',
				'utilities/color/color-converters',
				'utilities/color/extract-color-values',
			],
		},
		{
			type: 'category',
			label: 'Date & Time Utilities',
			link: {
				type: 'doc',
				id: 'utilities/date/date',
			},
			items: [
				'utilities/date/getGreeting',
				'utilities/date/formatUTCOffset',
				'utilities/date/extractHourMinute',
				'utilities/date/getTotalMinutes',
				'utilities/date/extractMinutesFromUTC',
				'utilities/date/extractTimeFromUTC',
				'utilities/date/getCurrentDateTime',
			],
		},
		{
			type: 'category',
			label: 'Form Utilities',
			link: {
				type: 'doc',
				id: 'utilities/form/form',
			},
			items: [
				'utilities/form/createFormData',
				'utilities/form/parseFormData',
				'utilities/form/serializeForm',
			],
		},
		{
			type: 'category',
			label: 'DOM Utilities',
			link: {
				type: 'doc',
				id: 'utilities/dom/dom',
			},
			items: [
				'utilities/dom/copyToClipboard',
				'utilities/dom/generateQueryParams',
				'utilities/dom/getQueryParams',
				'utilities/dom/updateQueryParam',
				'utilities/dom/parseQueryString',
				'utilities/dom/smoothScrollTo',
				'utilities/dom/toggleFullScreen',
				'utilities/dom/local-storage',
				'utilities/dom/session-storage',
			],
		},
		{
			type: 'category',
			label: 'Miscellaneous Utilities',
			link: {
				type: 'doc',
				id: 'utilities/misc/misc',
			},
			items: [
				'utilities/misc/debounceAction',
				'utilities/misc/throttleAction',
				'utilities/misc/parseJSON',
				'utilities/misc/deepParsePrimitives',
				'utilities/misc/convertArrayToString',
				'utilities/misc/class-methods',
			],
		},
	],

	classesSidebar: [
		{
			type: 'doc',
			id: 'classes/classes',
		},
		{
			type: 'category',
			label: 'Chronos',
			link: {
				type: 'doc',
				id: 'classes/Chronos',
			},
			items: [
				'classes/Chronos',
				// 'classes/finder',
				// add more class docs here
			],
		},
	],

	predicatesSidebar: [
		{
			type: 'doc',
			id: 'predicates-guards',
		},
		{
			type: 'category',
			label: 'Predicate Functions',
			link: {
				type: 'doc',
				id: 'predicates/predicates',
			},
			items: [
				'predicates/isDeepEqual',
				'predicates/number-checkers',
				'predicates/string-checkers',
				'predicates/array-checkers',
				'predicates/time-checkers',
			],
		},
		{
			type: 'category',
			label: 'Type Guards',
			link: {
				type: 'doc',
				id: 'guards/guards',
			},
			items: [
				'guards/time-guards',
				'guards/form-guards',
				// 'guards/isObject',
				// 'guards/isArray',
				// 'guards/isFunction',
				// 'guards/isDate',
				// 'guards/isNullOrUndefined',
				// 'guards/isValidEmail',
				// 'guards/isValidPhoneNumber',
			],
		},
	],
};

export default sidebars;
